#pragma once

/**
 * file: SqList.h
 * version: 0.1.0
 * author: Jamison Bryant <jbryant93@umbc.edu>
 * 
 * UMBC CMSC341 Fall 2017 (Chang)
 * Project 2
 *
 * Header file for the SqList (Square List) class. See project description in
 * README.txt for details.
 */

////////////////////////////////////////////////////////////////////////////////
// INCLUDES
////////////////////////////////////////////////////////////////////////////////

// Project includes
#include "Int341.h"

// STL includes
#include <list>

////////////////////////////////////////////////////////////////////////////////
// NAMESPACES
////////////////////////////////////////////////////////////////////////////////

// STL namespaces
using namespace std;

////////////////////////////////////////////////////////////////////////////////
// CLASS DEFINITION
////////////////////////////////////////////////////////////////////////////////

class SqList
{
public:

    //////////////////////////////////////////////////////////////////////////// 
    // CONSTRUCTORS/DESTRUCTORS
    //////////////////////////////////////////////////////////////////////////// 

    SqList(void);
    SqList(const SqList&);
    ~SqList(void);

    //////////////////////////////////////////////////////////////////////////// 
    // OPERATOR OVERLOADS
    //////////////////////////////////////////////////////////////////////////// 

    const SqList& operator=(const SqList&);
    Int341& operator[](int);

    //////////////////////////////////////////////////////////////////////////// 
    // PUBLIC METHODS
    //////////////////////////////////////////////////////////////////////////// 

    void inspector(void);

    void consolidate(void);

    void addFirst(const Int341&);

    void addLast(const Int341&);

    void add(int, const Int341&);

    Int341 removeFirst(void);

    Int341 removeLast(void);
    
    Int341 remove(int);

    int indexOf(const Int341&);

    int numItems(void);

    void dump(void);

private:

    //////////////////////////////////////////////////////////////////////////// 
    // PRIVATE DATA MEMBERS
    //////////////////////////////////////////////////////////////////////////// 

    list<list<Int341>> L;
    
};

